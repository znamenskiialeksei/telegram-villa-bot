// src/bot.ts

import { Telegraf, Markup } from 'telegraf';
import { message } from 'telegraf/filters';
import { MyContext, SessionData, Villa, Booking } from './types';
import {
    saveVilla, getVillas, getVillaById, updateVilla, deleteVilla,
    saveBooking, getUserBookings, getBookingById, updateBooking,
    getAllBookings, deleteBooking as deleteBookingFromFirestore // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º deleteBooking –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
} from './utils/firestore'; // –£–¥–∞–ª–µ–Ω firestore, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
import { BOT_TOKEN, ADMIN_ID } from './config';

import LocalSession from 'telegraf-session-local';
import { manageVillasCommand, showVillaManagementCard } from './commands/manageVillas'; // –ù–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê
import { startEditVillaCommand, handleEditVillaInput, handleEditVillaPhotos } from './commands/editVilla'; // –ù–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê
import { deleteVillaCommand } from './commands/deleteVilla'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–ª–ª—ã

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –ª–∏–º–∏—Ç–∞ —Ñ–æ—Ç–æ
const PHOTO_LIMIT = 5;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf<MyContext>(BOT_TOKEN);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Å—Å–∏–∏
const session = new LocalSession({ database: 'sessions.json' });
bot.use(session.middleware());

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
export const clearSession = (ctx: MyContext) => { // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ editVilla.ts
    ctx.session.step = undefined;
    ctx.session.data = undefined;
    ctx.session.editingVillaId = undefined; // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    ctx.session.editingVillaData = undefined; // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —à–∞–≥–∞ –∏ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–∏
const completeStep = async (ctx: MyContext, message: string) => {
    await ctx.reply(message, Markup.removeKeyboard());
    clearSession(ctx);
};

const handleInputError = (ctx: MyContext, message: string) => ctx.reply(`–û—à–∏–±–∫–∞: ${message}`);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é)
const showMainMenu = async (ctx: MyContext) => {
    clearSession(ctx); // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    let mainMenuKeyboard;
    if (ctx.from?.id === ADMIN_ID) {
        mainMenuKeyboard = Markup.keyboard([
            ['üè° –í–∏–ª–ª—ã', 'üóìÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'],
            ['‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∏–ª–ª—É', '‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–ª–ª–∞–º–∏'], // –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
            ['üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', '‚ùì –ü–æ–º–æ—â—å']
        ]).resize();
    } else {
        mainMenuKeyboard = Markup.keyboard([
            ['üè° –í–∏–ª–ª—ã', 'üóìÔ∏è –ú–æ–∏ –∑–∞—è–≤–∫–∏'],
            ['‚ùì –ü–æ–º–æ—â—å']
        ]).resize();
    }
    await ctx.reply('–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.', mainMenuKeyboard);
};


// --- –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ---

bot.start(async (ctx) => {
    await showMainMenu(ctx); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
});

bot.help(async (ctx) => {
    // –¢–µ–ø–µ—Ä—å –∫–æ–º–∞–Ω–¥–∞ /help –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await showMainMenu(ctx);
});

bot.command('add_villa', async (ctx) => {
    if (ctx.from?.id !== ADMIN_ID) {
        return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    }
    clearSession(ctx);
    ctx.session.step = 'add_villa_name';
    ctx.session.data = { photos: [] };
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–ª–ª—ã:');
});

bot.command('villas', async (ctx) => {
    clearSession(ctx); // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –≤–∏–ª–ª
    const villas = await getVillas();
    if (villas.length === 0) {
        return ctx.reply('–í–∏–ª–ª –ø–æ–∫–∞ –Ω–µ—Ç.');
    }
    for (const villa of villas) {
        const photo = villa.photos[0] || 'https://via.placeholder.com/300?text=No+Image';
        let message = `*${villa.name}*\n`;
        message += `üìç ${villa.location}\n`;
        message += `üí∞ ${villa.price} ${villa.currency}\n`;
        message += villa.description ? `üìù ${villa.description}\n` : '';
        message += `ID: \`${villa.id}\`\n`;

        await ctx.replyWithPhoto(photo, {
            caption: message,
            parse_mode: 'Markdown',
            ...Markup.inlineKeyboard([
                Markup.button.callback('–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', `book_villa:${villa.id}`)
            ])
        });
    }
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–ª–ª—É –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', Markup.inlineKeyboard([
        [Markup.button.callback('‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
    ]));
});

// –ù–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê –î–õ–Ø –ê–î–ú–ò–ù–ê: –£–ü–†–ê–í–õ–ï–ù–ò–ï –í–ò–õ–õ–ê–ú–ò
bot.command('manage_villas', manageVillasCommand); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É

bot.command('book', async (ctx) => {
    clearSession(ctx);
    const villas = await getVillas();
    if (villas.length === 0) {
        return ctx.reply('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∏–ª–ª –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∫–∞ –Ω–µ—Ç.');
    }

    const villaButtons = villas.map(villa =>
        Markup.button.callback(`${villa.name} (${villa.location})`, `select_villa_to_book:${villa.id}`)
    );

    const keyboard = [];
    for (let i = 0; i < villaButtons.length; i += 1) {
        keyboard.push([villaButtons[i]]);
    }

    await ctx.reply('–ö–∞–∫—É—é –≤–∏–ª–ª—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å?', Markup.inlineKeyboard(keyboard));
    ctx.session.step = 'select_villa_for_booking';
});

bot.command('my_bookings', async (ctx) => {
    clearSession(ctx);
    const userId = ctx.from?.id;
    if (!userId) {
        return ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
    }

    const userBookings = await getUserBookings(userId);

    if (userBookings.length === 0) {
        return ctx.reply('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.');
    }

    await ctx.reply('–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞—è–≤–∫–∏:');
    for (const booking of userBookings) {
        const villa = await getVillaById(booking.villaId);
        const villaName = villa ? villa.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∏–ª–ª–∞';

        let message = `*–ó–∞—è–≤–∫–∞ ID: ${booking.id?.substring(0, 6)}...*\n`;
        message += `üè† –í–∏–ª–ª–∞: ${villaName}\n`;
        message += `üóìÔ∏è –ó–∞–µ–∑–¥: ${booking.checkIn}\n`;
        message += `üóìÔ∏è –í—ã–µ–∑–¥: ${booking.checkOut}\n`;
        message += `üë• –ì–æ—Å—Ç–µ–π: ${booking.guests}\n`;
        message += booking.comments ? `üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${booking.comments}\n` : '';
        message += `–°—Ç–∞—Ç—É—Å: *${booking.status.toUpperCase()}*\n`;

        await ctx.reply(message, { parse_mode: 'Markdown' });
    }
    await ctx.reply('–í–∞—à–∏ –∑–∞—è–≤–∫–∏.', Markup.inlineKeyboard([
        [Markup.button.callback('‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
    ]));
});

// --- –û–ë–©–ò–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –í–í–û–î–ê (TEXT –∏ PHOTO) ---

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', async (ctx) => {
    if (!('data' in ctx.callbackQuery)) {
        return ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.');
    }
    const query = ctx.callbackQuery.data;

    // –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –ò –ö–ù–û–ü–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø
    if (query === 'main_menu') {
        await ctx.answerCbQuery();
        await showMainMenu(ctx);
        return;
    }

    if (query?.startsWith('view_manage_villa:')) {
        const villaId = query.split(':')[1];
        await ctx.answerCbQuery();
        await showVillaManagementCard(ctx, villaId); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        return;
    }

    if (query?.startsWith('edit_villa:')) {
        const villaId = query.split(':')[1];
        await ctx.answerCbQuery();
        await startEditVillaCommand(ctx, villaId); // –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –≤–∏–ª–ª"
    if (query === 'manage_villas_list_back') {
        await ctx.answerCbQuery();
        await manageVillasCommand(ctx); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∏–ª–ª –∑–∞–Ω–æ–≤–æ
        return;
    }

    if (query?.startsWith('confirm_delete_villa:')) {
        const villaId = query.split(':')[1];
        await ctx.answerCbQuery();
        ctx.session.step = `confirm_delete_villa_action:${villaId}`; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await ctx.reply(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–∏–ª–ª—É —Å ID \`${villaId}\`? –ù–∞–ø–∏—à–∏—Ç–µ *–î–∞* –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.`, { parse_mode: 'Markdown' });
        return;
    }

    // –õ–û–ì–ò–ö–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø
    if (query?.startsWith('book_villa:')) {
        const villaId = query.split(':')[1];
        clearSession(ctx);
        ctx.session.step = 'book_villa_start_date';
        ctx.session.data = { villaId: villaId };
        await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–ª–ª—É. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ **–¥–∞—Ç—É –∑–∞–µ–∑–¥–∞** (–ì–ì–ì–ì-–ú–ú-–î–î), –Ω–∞–ø—Ä–∏–º–µ—Ä, ${new Date().getFullYear()}-01-15:`, { parse_mode: 'Markdown' });
        return ctx.answerCbQuery();
    }

    if (query?.startsWith('select_villa_to_book:')) {
        const villaId = query.split(':')[1];
        ctx.session.step = 'book_villa_start_date';
        ctx.session.data = { villaId: villaId };
        await ctx.editMessageText(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–ª–ª—É. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ **–¥–∞—Ç—É –∑–∞–µ–∑–¥–∞** (–ì–ì–ì–ì-–ú–ú-–î–î), –Ω–∞–ø—Ä–∏–º–µ—Ä, ${new Date().getFullYear()}-01-15:`, { parse_mode: 'Markdown' });
        return ctx.answerCbQuery();
    }

    return ctx.answerCbQuery(); // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ callbackQuery
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on(message('text'), async (ctx) => {
    const state = ctx.session;
    const text = ctx.message.text;

    // –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ö–ù–û–ü–ö–ê –û–¢–ú–ï–ù–´
    if (text === '/cancel') {
        clearSession(ctx);
        await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.');
        await showMainMenu(ctx);
        return;
    }

    // –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–û–í–´–• –ö–ù–û–ü–û–ö –ì–õ–ê–í–ù–û–ì–û –ú–ï–ù–Æ
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É
    if (['üè° –í–∏–ª–ª—ã', 'üóìÔ∏è –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∏–ª–ª—É', '‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–ª–ª–∞–º–∏', 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', '‚ùì –ü–æ–º–æ—â—å', 'üóìÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', '‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'].includes(text)) {
        if (text === 'üè° –í–∏–ª–ª—ã') {
            return bot.handleUpdate(ctx.update); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /villas
        } else if (text === 'üóìÔ∏è –ú–æ–∏ –∑–∞—è–≤–∫–∏' || text === 'üóìÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è') {
            return bot.handleUpdate(ctx.update); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /my_bookings
        } else if (text === '‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∏–ª–ª—É') {
            return bot.handleUpdate(ctx.update); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /add_villa
        } else if (text === '‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–ª–ª–∞–º–∏') {
            return bot.handleUpdate(ctx.update); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /manage_villas
        } else if (text === 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞') {
             // return bot.handleUpdate(ctx.update); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /analytics
             await ctx.reply('–ö–æ–º–∞–Ω–¥–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.'); // –ó–∞–≥–ª—É—à–∫–∞, –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É /analytics
             await showMainMenu(ctx);
             return;
        } else if (text === '‚ùì –ü–æ–º–æ—â—å') {
            return bot.handleUpdate(ctx.update); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
        } else if (text === '‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
            await showMainMenu(ctx);
            return;
        }
    }


    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —à–∞–≥–∞, –∏–ª–∏ –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if (!state || !state.step) {
        await showMainMenu(ctx);
        return;
    }

    // –ü–†–û–î–û–õ–ñ–ï–ù–ò–ï –õ–û–ì–ò–ö–ò –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –í–ò–õ–õ–´
    if (state.step.startsWith('confirm_delete_villa_action:')) {
        const villaId = state.step.split(':')[1];
        if (text.toLowerCase() === '–¥–∞') { // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–ª–æ–≤–æ–º "–î–∞"
            try {
                await deleteVilla(villaId); // –ò—Å–ø–æ–ª—å–∑—É–µ–º deleteVilla –∏–∑ utils/firestore
                await ctx.reply(`‚úÖ –í–∏–ª–ª–∞ —Å ID \`${villaId}\` —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!`);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∏–ª–ª—ã:', error);
                await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∏–ª–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            } finally {
                clearSession(ctx);
                await showMainMenu(ctx);
            }
        } else { // –õ—é–±–æ–π –¥—Ä—É–≥–æ–π –æ—Ç–≤–µ—Ç –∫—Ä–æ–º–µ "–î–∞" –∏–ª–∏ /cancel
            await ctx.reply('–£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–ª–ª—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.');
            clearSession(ctx);
            await showMainMenu(ctx);
        }
        return;
    }


    const { step, data } = state; // –ü–æ–≤—Ç–æ—Ä–Ω–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ confirm_delete_villa_action

    // –õ–û–ì–ò–ö–ê –î–û–ë–ê–í–õ–ï–ù–ò–Ø –í–ò–õ–õ–´ (–¥–ª—è –∞–¥–º–∏–Ω–∞)
    if (step.startsWith('add_villa_')) {
        switch (step) {
            case 'add_villa_name':
                data.name = text; state.step = 'add_villa_location';
                await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é:');
                break;
            case 'add_villa_location':
                data.location = text; state.step = 'add_villa_price';
                await ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É:');
                break;
            case 'add_villa_price':
                const price = parseFloat(text);
                if (isNaN(price) || price <= 0) return handleInputError(ctx, '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (—á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0).');
                data.price = price; state.step = 'add_villa_currency';
                await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:', Markup.keyboard([['RUB', 'TRY'], ['USD', 'EUR', 'GBP']]).oneTime().resize());
                break;
            case 'add_villa_currency':
                if (!['RUB', 'TRY', 'USD', 'EUR', 'GBP'].includes(text.toUpperCase())) return handleInputError(ctx, '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞ (RUB, TRY, USD, EUR, GBP).');
                data.currency = text.toUpperCase(); state.step = 'add_villa_description';
                await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–ª–ª—ã (–∏–ª–∏ /skip, –µ—Å–ª–∏ –Ω–µ—Ç):');
                break;
            case 'add_villa_description':
                if (text === '/skip') {
                    data.description = '';
                } else {
                    data.description = text;
                }
                state.step = 'add_villa_photos';
                await ctx.reply(`–û—Ç–ø—Ä–∞–≤—å—Ç–µ ${PHOTO_LIMIT} —Ñ–æ—Ç–æ (–ø–µ—Ä–≤–∞—è - –æ–±–ª–æ–∂–∫–∞).`);
                break;
            default:
                await ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —à–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∏–ª–ª—ã.');
                clearSession(ctx);
                break;
        }
    }
    // –õ–û–ì–ò–ö–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –í–ò–õ–õ–´
    else if (ctx.session.step && ctx.session.step.startsWith('edit_villa_')) {
        await handleEditVillaInput(ctx, text);
    }
    // –õ–û–ì–ò–ö–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø –í–ò–õ–õ–´
    else if (step.startsWith('book_villa_')) {
        const userId = ctx.from?.id;
        const userName = ctx.from?.first_name || ctx.from?.last_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
        const userUsername = ctx.from?.username || '';
        const villa = await getVillaById(data.villaId);
        const villaName = villa ? villa.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∏–ª–ª–∞';

        if (!userId) {
            await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            return clearSession(ctx);
        }

        switch (step) {
            case 'book_villa_start_date':
                if (!/^\d{4}-\d{2}-\d{2}$/.test(text)) {
                    return handleInputError(ctx, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-01-15).');
                }
                data.checkIn = text;
                state.step = 'book_villa_end_date';
                await ctx.reply('–í–≤–µ–¥–∏—Ç–µ **–¥–∞—Ç—É –≤—ã–µ–∑–¥–∞** (–ì–ì–ì–ì-–ú–ú-–î–î):', { parse_mode: 'Markdown' });
                break;
            case 'book_villa_end_date':
                if (!/^\d{4}-\d{2}-\d{2}$/.test(text)) {
                    return handleInputError(ctx, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-01-20).');
                }
                if (new Date(text) <= new Date(data.checkIn)) {
                    return handleInputError(ctx, '–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞.');
                }
                data.checkOut = text;
                state.step = 'book_villa_guests';
                await ctx.reply('–°–∫–æ–ª—å–∫–æ –≥–æ—Å—Ç–µ–π –±—É–¥–µ—Ç (–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ):');
                break;
            case 'book_villa_guests':
                const guests = parseInt(text, 10);
                if (isNaN(guests) || guests <= 0) {
                    return handleInputError(ctx, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –≥–æ—Å—Ç–µ–π (–±–æ–ª—å—à–µ 0).');
                }
                data.guests = guests;
                state.step = 'book_villa_comments';
                await ctx.reply('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏? (–∏–ª–∏ /skip):');
                break;
            case 'book_villa_comments':
                if (text === '/skip') {
                    data.comments = '';
                } else {
                    data.comments = text;
                }

                const newBooking: Omit<Booking, 'id' | 'createdAt' | 'status'> = {
                    userId: userId,
                    userName: userName,
                    userUsername: userUsername,
                    villaId: data.villaId,
                    villaName: villaName,
                    checkIn: data.checkIn,
                    checkOut: data.checkOut,
                    guests: data.guests,
                    comments: data.comments
                };

                try {
                    await saveBooking(newBooking);
                    await completeStep(ctx, `‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–ª–ª—É "${villaName}" –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.`);
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', error);
                    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
                break;
            default:
                await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥–æ–π /book.');
                clearSession(ctx);
                break;
        }
    } else {
        // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∞–∫—Ç–∏–≤–Ω–æ–º—É —à–∞–≥—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await showMainMenu(ctx);
    }
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
bot.on(message('photo'), async (ctx) => {
    const state = ctx.session;
    if (!state || (state.step !== 'add_villa_photos' && state.step !== 'edit_villa_photos')) return;

    if (ctx.session.step === 'edit_villa_photos') {
        // –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ, –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const fileId = ctx.message.photo.pop()!.file_id;
        await handleEditVillaPhotos(ctx, fileId);
        return;
    }

    state.data.photos.push(ctx.message.photo.pop()!.file_id);

    if (state.data.photos.length < PHOTO_LIMIT) {
        await ctx.reply(`–§–æ—Ç–æ ${state.data.photos.length} –∏–∑ ${PHOTO_LIMIT} –¥–æ–±–∞–≤–ª–µ–Ω–æ.`);
    } else {
        if (state.step === 'add_villa_photos') {
            try {
                const villa = await saveVilla(state.data);
                await completeStep(ctx, `üéâ –í–∏–ª–ª–∞ "${villa.name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!`);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–ª–ª—ã:', error);
                await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–ª–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
        } else {
            // –≠—Ç–æ –≤–µ—Ç–∫–∞ –¥–ª—è edit_photos, –µ—Å–ª–∏ –±—ã –æ–Ω–∞ –±—ã–ª–∞ –∑–¥–µ—Å—å.
            // –°–µ–π—á–∞—Å –æ–Ω–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ handleEditVillaPhotos
            // await updateVilla(state.data.villaId, { photos: state.data.photos });
            // await completeStep(ctx, '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∏–ª–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.');
        }
    }
});


// --- –ó–ê–ü–£–°–ö –ò –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö ---

bot.catch((err, ctx) => {
    console.error(`–û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}:`, err);
    ctx.reply('–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º.').catch(e =>
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', e)
    );
});

bot.launch()
    .then(() => console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'))
    .catch((err) => {
        console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', err);
        process.exit(1);
    });

// –í–∫–ª—é—á–µ–Ω–∏–µ graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));